name: ReportHub

on:
  pull_request:
    branches: ['main']
    types: ['closed']
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: reporthub
  CONTAINER_APP_NAME: reporthub
  RESOURCE_GROUP: ExadelBootcamp

jobs: 
  build:
    runs-on: ubuntu-latest

    steps: 
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run docker compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with: 
          compose-file: './docker-compose.yml'
          services: |
            api
          up-flags: '--build -d'

  run-unit-tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Run docker compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: './docker-compose.yml'
          services: |
            api
          up-flags: '--build -d'

      - name: Run tests
        run: dotnet test ./tests/Tests/Tests.csproj

  run-integration-tests:
    needs: run-unit-tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore the API
        run: dotnet restore ./src/Api/Api.csproj

      - name: Build the API
        run: dotnet build ./src/Api/Api.csproj --no-restore

      - name: Run API in background
        run: |
          nohup dotnet run --project ./src/Api/Api.csproj --urls=http://localhost:5297 > api.log 2>&1 &
          echo $! > api_pid.txt
          
      - name: Wait for API to be ready
        run: sleep 60
        
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
          
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
          
      - name: Run API tests
        run: |
          postman collection run "${{ github.workspace }}/tests/IntegrationTests/users.json" -e "40646021-0eb0a767-64e5-4d43-945f-f71d42d7fa70" --integration-id "177179-${{ github.run_id }}"
      
      - name: Stop api
        run: kill $(cat api_pid.txt)

  deploy:
    needs: run-integration-tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build and push container image to ACR
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}
          file: src/Api/Dockerfile

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          environmentVariables: |
            ASPNETCORE_ENVIRONMENT=Development

@page "/users"
@using Web.Models
@using Web.Models.Clients
@using Web.Models.Users
@using Web.Services
@using Web.Services.Clients
@using Web.Services.Users
@inject IUserService UserService
@inject IUserProviderService UserProvider
@rendermode InteractiveServer

<PageTitle>Clients</PageTitle>
@if (userRoles.SystemRoles is not null && userRoles.SystemRoles.Contains("SuperAdmin"))
{
    <Table Striped ResponsiveMode="TableResponsiveMode.Mobile" Bordered Hoverable>
        <TableHeader>
            <TableRow>
                <TableHeaderCell>#</TableHeaderCell>
                <TableHeaderCell>First Name</TableHeaderCell>
                <TableHeaderCell>Last Name</TableHeaderCell>
                <TableHeaderCell>Department</TableHeaderCell>
                <TableHeaderCell>Email</TableHeaderCell>
                <TableHeaderCell></TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>
            @for (var i = 0; i < users.Count; i++)
            {
                var index = i;
                <TableRow>
                    <TableRowHeader>@(index + 1)</TableRowHeader>
                    <TableRowCell>@users[index].FirstName</TableRowCell>
                    <TableRowCell>@users[index].LastName</TableRowCell>
                    <TableRowCell>@users[index].Department</TableRowCell>
                    <TableRowCell>@users[index].Email</TableRowCell>
                    <TableRowCell class="icon-cell">
                        <div class="d-flex justify-content-center align-items-center gap-2">
                            <Icon Name="IconName.Eye" class="text-primary" />
                            <Icon Name="IconName.Edit" class="text-warning" />
                            <Icon Name="IconName.Delete" class="text-danger cursor-pointer" />
                        </div>
                    </TableRowCell>
                </TableRow>
            }
        </TableBody>
    </Table>
}
else
{
    <p>You are not allowed to this page!</p>
}


@code {
    private List<UserResponse> users = [];
    private UserRoles userRoles;

    protected override async Task OnInitializedAsync()
    {
        userRoles = UserProvider.GetRoles()
            ?? new UserRoles();

        users = await UserService.UserListAsync();
    }
}

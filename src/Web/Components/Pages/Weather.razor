@page "/weather"
@inject IHttpClientFactory ClientFactory
@attribute [StreamRendering]

<PageTitle>Weather</PageTitle>

@if (showError)
{
    <Snackbar Visible="@showError" 
              VisibleChanged="@((bool value) => showError = value)" 
              Color="Color.Danger" 
              AutohideInterval="3000">
        @errorMessage
    </Snackbar>
}
else
{
    <h1>Weather</h1>

    <p>This component demonstrates showing data.</p>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Farenheit">Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast> forecasts = new List<WeatherForecast>();
    private bool showError = false;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("api");
        var httpResponse = await client.GetAsync("weatherforecast");
        if (httpResponse.IsSuccessStatusCode)
        {
            var response = await client.GetFromJsonAsync<List<WeatherForecast>>("weatherforecast");
            var startDate = DateOnly.FromDateTime(DateTime.Now);
            var summaries = response;
            forecasts = response.ToList();
        }
        else
        {
            showError = true;
            errorMessage = "You don't have access to this page!";
        }
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
